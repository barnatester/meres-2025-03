/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.realestategui;

import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author birob.20d
 */
public class RealEstateJFrame extends javax.swing.JFrame {

    /**
     * Creates new form RealEstateJFrame
     */
    public RealEstateJFrame() {
        initComponents();
        loadSellers();
    }
    
    private void loadSellers() {
        DefaultListModel<String> model = new DefaultListModel<>();
        try (Connection conn = DatabaseConnection.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT name FROM sellers")) {
            
            while (rs.next()) {
                model.addElement(rs.getString("name"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Hiba történt az eladók betöltése közben!", "Hiba", JOptionPane.ERROR_MESSAGE);
        }
        sellerList.setModel(model);
    }
    
    private void updateSellerDetails() {
        String selectedSeller = sellerList.getSelectedValue();
        if (selectedSeller == null) return;

        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement("SELECT * FROM sellers WHERE name = ?")) {
            
            stmt.setString(1, selectedSeller);
            ResultSet rs = stmt.executeQuery();
            
            if (rs.next()) {
                sellerNameLabel.setText(rs.getString("name"));
                sellerPhoneLabel.setText(rs.getString("phone"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Hiba történt az eladó adatok betöltése közben!", "Hiba", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void loadAdvertisements(ActionEvent evt) {
        String selectedSeller = sellerList.getSelectedValue();
        if (selectedSeller == null) return;

        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(
                     "SELECT COUNT(*) FROM realestates r JOIN sellers s ON r.sellerId = s.id WHERE s.name = ?")) {
            
            stmt.setString(1, selectedSeller);
            ResultSet rs = stmt.executeQuery();
            
            if (rs.next()) {
                advertisementCountLabel.setText("Hirdetések száma: " + rs.getInt(1));
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Hiba történt a hirdetések betöltése közben!", "Hiba", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sellerNameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(280, Short.MAX_VALUE)
                .addComponent(sellerNameLabel)
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(sellerNameLabel)
                .addContainerGap(280, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initComponents() {
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ingatlan kezelő");

        sellerList = new JList<>();
        sellerList.addListSelectionListener(evt -> updateSellerDetails());

        sellerNameLabel = new JLabel("N/A");
        sellerPhoneLabel = new JLabel("N/A");
        advertisementCountLabel = new JLabel("Hirdetések száma: 0");

        loadAdvertisementsButton = new JButton("Hirdetések betöltése");
        loadAdvertisementsButton.addActionListener(this::loadAdvertisements);

        // Panel és Layout beállítása
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        panel.add(new JLabel("Eladók:"));
        panel.add(new JScrollPane(sellerList));
        panel.add(new JLabel("Eladó neve:"));
        panel.add(sellerNameLabel);
        panel.add(new JLabel("Eladó telefonszáma:"));
        panel.add(sellerPhoneLabel);
        panel.add(loadAdvertisementsButton);
        panel.add(advertisementCountLabel);

        add(panel);
        pack();
        setLocationRelativeTo(null);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RealEstateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RealEstateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RealEstateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RealEstateJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        SwingUtilities.invokeLater(() -> new RealEstateJFrame().setVisible(true));

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RealEstateJFrame().setVisible(true);
            }
        });
    }
    private JList<String> sellerList;
    private JLabel sellerNameLabel;
    private JLabel sellerPhoneLabel;
    private JLabel advertisementCountLabel;
    private JButton loadAdvertisementsButton;
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel sellerNameLabel;
    // End of variables declaration//GEN-END:variables
}
